#!/usr/bin/env bash
# –ü—Ä–µ—Ä—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ
set -euo pipefail

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º IP –∞–¥—Ä–µ—Å —Ö–æ—Å—Ç–∞
HOST_IP=$(hostname -I | awk '{print $1}')
if [ -z "$HOST_IP" ]; then
  echo "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å IP –∞–¥—Ä–µ—Å —Ö–æ—Å—Ç–∞, —Å—Ç–∞–≤–∏–º localhost"
  HOST_IP="127.0.0.1"
fi

echo "üîª –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
docker compose down

echo "üóëÔ∏è  –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ"
sudo rm -rf docker_data

echo "üìÑ –ü—Ä–æ–≤–µ—Ä—è–µ–º .env"
if [ ! -f .env ]; then
    cat > .env <<EOF
AIRFLOW_UID=1000
CRON_SCHEDULE_CHANNEL_DATA_UPDATE="0 * * * *"
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ Python-–ø–∞–∫–µ—Ç—ã –¥–ª—è Airflow
_PIP_ADDITIONAL_REQUIREMENTS=python-dotenv
DATA_COLLECTION_API_BASE_URL="http://${HOST_IP}:8082"
AUTH_API_BASE_URL="http://${HOST_IP}:8081"
EOF
    echo "‚úÖ –°–æ–∑–¥–∞–Ω .env —Å URL –Ω–∞ IP ${HOST_IP} –∏ ÏÑ§Ïπò python-dotenv"
else
    echo "‚ÑπÔ∏è  .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–ª–∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ URL –∏ _PIP_ADDITIONAL_REQUIREMENTS
    declare -A vars=(
      [DATA_COLLECTION_API_BASE_URL]=8082
      [AUTH_API_BASE_URL]=8081
      [_PIP_ADDITIONAL_REQUIREMENTS]="python-dotenv"
    )
    for var in "${!vars[@]}"; do
        value=${vars[$var]}
        if [ "$var" = "_PIP_ADDITIONAL_REQUIREMENTS" ]; then
            new_value="$value"
        else
            new_value="http://${HOST_IP}:$value"
        fi
        if grep -qE "^${var}=" .env; then
            sed -i "s|^${var}=.*|${var}=${new_value}|" .env
            echo "üîÑ –û–±–Ω–æ–≤–ª—ë–Ω ${var} –≤ .env: ${new_value}"
        else
            echo "${var}=${new_value}" >> .env
            echo "‚ûï –î–æ–±–∞–≤–ª–µ–Ω ${var} –≤ .env: ${new_value}"
        fi
    done
fi

echo "üê≥ –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ –¥–ª—è fetch_users"
DOCKER_BUILDKIT=1 docker build \
    --network=host \
    -f dockerfile.dag \
    -t fetch_users .

echo "üîí –î–∞—ë–º –ø—Ä–∞–≤–∞ –Ω–∞ Docker socket"
# –ú–µ–Ω—è–µ–º —Ç–æ–ª—å–∫–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —Ñ–∞–π–ª ‚Äî –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã /var/run —Ç—Ä–æ–≥–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ
sudo chmod a+rw /var/run/docker.sock || true

echo "üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Ç—å airflow_network"
if ! docker network ls --format '{{.Name}}' | grep -qw airflow_network; then
    docker network create airflow_network
    echo "‚úÖ –°–µ—Ç—å airflow_network —Å–æ–∑–¥–∞–Ω–∞"
else
    echo "‚ÑπÔ∏è  –°–µ—Ç—å airflow_network —É–∂–µ –µ—Å—Ç—å"
fi

echo "‚öôÔ∏è  –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Airflow"
sudo docker compose up airflow-init

echo "‚öôÔ∏è  –ó–∞–ø—É—Å–∫–∞–µ–º —Å—Ç–µ–∫ Airflow"
sudo docker compose up --build

echo "üéâ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω"
